{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","Filter","props","react_default","a","createElement","onChange","handleFilter","Notification","_ref","message","success","className","Person","_ref2","person","handleRemove","name","number","value","onClick","Persons","_ref3","persons","map","App_Person","key","AddPerson","_ref4","newName","newNumber","addName","handleNameChange","handleNumberChange","onSubmit","type","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","show","setShow","_useState9","_useState10","errorMessage","setErrorMessage","_useState11","_useState12","setSuccess","useEffect","personsService","initialPersons","changeError","msg","suc","setTimeout","App_Filter","e","found","filter","toLocaleLowerCase","indexOf","target","App_Notification","App_AddPerson","event","preventDefault","find","p","undefined","returnedPerson","changed","objectSpread","returned","catch","console","log","App_Persons","resp","toString","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0d0c025a.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport personsService from \"./services/persons\";\nimport \"./index.css\";\n\n// filtering component\nconst Filter = props => {\n  return (\n    <div>\n      rajaa näytettäviä: <input onChange={props.handleFilter} />\n    </div>\n  );\n};\n\n// main component\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [show, setShow] = useState(persons);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n\n  // gets data from server\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n      setShow(initialPersons);\n    });\n  }, []);\n\n  // sets notification message and error or success with bool\n  const changeError = (msg, suc) => {\n    setSuccess(suc);\n    setErrorMessage(msg);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  // Compares imput of filter and filters matches to show\n  const handleFilter = e => {\n    const found = persons.filter(\n      person =>\n        person.name\n          .toLocaleLowerCase()\n          .indexOf(e.target.value.toLocaleLowerCase()) > -1\n    );\n    setShow(found);\n  };\n\n  // handles change of number input box\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  // handles change of number input\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  // eventhandling for form submit\n  const addName = event => {\n    event.preventDefault();\n    if (newName === \"\") return;\n\n    const person = persons.find(p => p.name === newName);\n    if (person !== undefined && newName === person.name) {\n      changeError(`Henkilön ${newName} numero korvattiin uudella.`, true);\n      const changed = { ...person, number: newNumber };\n      personsService\n        .update(person.id, changed)\n        .then(returned => {\n          setPersons(persons.map(p => (person.name !== p.name ? p : returned)));\n          setShow(persons.map(p => (person.name !== p.name ? p : returned)));\n        })\n        .catch(e => {\n          console.log(\"Virhe poistossa:\", e);\n          changeError(`Henkilö on poistettu`, false);\n        });\n      return;\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    personsService.create(newPerson).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson));\n      setShow(persons.concat(returnedPerson));\n      changeError(`Lisättiin ${newName}.`, true);\n    });\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // handles remove with id\n  const handleRemove = e => {\n    const id = e.target.value;\n\n    personsService\n      .remove(id)\n      .then(resp => {\n        setPersons(persons.filter(p => p.id.toString() !== id.toString()));\n        setShow(persons.filter(p => p.id.toString() !== id.toString()));\n        changeError(`Poistettiin henkilö onnistuneesti.`, true);\n      })\n      .catch(e => {\n        console.log(\"Virhe poistossa:\", e);\n        changeError(`Henkilö on jo poistettu`, false);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Filter handleFilter={handleFilter} />\n\n      <h2>Lisää uusi</h2>\n      <Notification message={errorMessage} success={success} />\n      <AddPerson\n        newName={newName}\n        newNumber={newNumber}\n        addName={addName}\n        handleNumberChange={handleNumberChange}\n        handleNameChange={handleNameChange}\n      />\n\n      <h2>Numerot</h2>\n      <Persons persons={show} handleRemove={handleRemove} />\n    </div>\n  );\n};\n\n// Notification component\nconst Notification = ({ message, success }) => {\n  if (message === null || message === \"\") {\n    return null;\n  }\n  if (success === true) return <p className='success'>{message}</p>;\n\n  return <p className='error'>{message}</p>;\n};\n\n// person component\nconst Person = ({ person, handleRemove }) => (\n  <p>\n    {person.name} {person.number}\n    <button value={person.id} onClick={handleRemove}>\n      Poista\n    </button>\n  </p>\n);\n\n// component for persons\nconst Persons = ({ persons, handleRemove }) => {\n  const allPersons = persons.map(person => (\n    <Person key={person.id} person={person} handleRemove={handleRemove} />\n  ));\n  return allPersons;\n};\n\nconst AddPerson = ({\n  newName,\n  newNumber,\n  addName,\n  handleNameChange,\n  handleNumberChange\n}) => (\n  <form onSubmit={addName}>\n    <fieldset>\n      <div>\n        nimi: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        numero: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type='submit'>lisää</button>\n      </div>\n      <div />\n    </fieldset>\n  </form>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}